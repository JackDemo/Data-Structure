package main;

public class BinaryTree<T> {

	public BinaryNode<T> root;
	public BinaryTree() {
		this.root = null;
	}
	public boolean isEmpty() {
		return this.root == null;
	}
	
	public BinaryNode<T> insert(BinaryNode<T> parent,T x,boolean leftChild) {
		if(x==null) return null;
		if(leftChild)
			return parent.left = new BinaryNode<T>(x,parent.left,null);
		return parent.right = new BinaryNode<T>(x,null,parent.right);
	}
	
	public BinaryNode<T> insert(T x) {
		return this.root = new BinaryNode<T>(x,this.root,null);
	}
	
	public void remove(BinaryNode<T> parent,boolean leftChild) {
		if(leftChild) parent.left = null;
		parent.right = null;
	}
	
	public void clear() {
		this.root = null;
	}
	
	public void preorder() {
		preorder(this.root);
		System.out.println();
	}
	public void preorder(BinaryNode<T> p) {
		if(p!=null)
		{
			System.out.print(p.data.toString()+" ");
			preorder(p.left);
			preorder(p.right);
		}
	}
	public static void main(String[] args) {
		// TODO 自动生成的方法存根

	}

}
